---
- name: Automating the basic configuration of virtual machines
  hosts: app
  become: true 

  tasks: 
    - name: Update package lists, perform curl installation
      apt: 
        name: 'curl'
        state: latest
        update_cache: true

    - name: Activate the UFW firewall, allow TCP ports 80,8080,1834
      ufw:
        rule: allow
        port: '{{ item }}'
        proto: tcp 
        state: enabled
      loop: 
        - '22'
        - '80'
        - '8080'
        - '1834'

    - name: Change the SSH configuration file | Connection port should be 1834
      lineinfile:
        dest: "/etc/ssh/sshd_config"
        regexp: "^Port"
        line: 'Port 1834'

    - name: Change SSH configuration file | Allow public key authorization
      lineinfile:
        dest: "/etc/ssh/sshd_config"
        line: '{{ item }}'
      loop: 
        - RSAAuthentication yes
        - PubkeyAuthentication yes
        - AuthorizedKeysFile     %h/.ssh/authorized_keys

    - name: Create users to access virtual machines
      ansible.builtin.user:
        name: "{{ item.username }}"
        password: "{{ item.userpass }}"
      loop:
         - { username: 'Webdeveloper', userpass: 'S52we9V6QTp7' }
         - { username: 'Devopsengineer', userpass: 'dHy6sKGHsj2T' }
         - { username: 'Projectmanager', userpass: 'oP92ugMSaCbe' }      

    - name: A public key must be placed for each user
      authorized_key:
        user: "{{ item }}"
        state: present
        key: "{{ id_rsa_pub }}"
      loop: 
        - Webdeveloper
        - Devopsengineer
        - Projectmanager
      vars:
        id_rsa_pub: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCbFX996jQIoGNh9bqjGqzN1EIfqE5k6JPuDJ3IzLvxImBK6ayN7htTh7fK8OrAE45FHvJw3SdBnTb6Liox8MhCTLylWFykmZ9LusCD7tTjHxCcBZ5oIUAhQFeFwGYIGJHSN+638kosiKVZjdcHhWFFGETlGt5wtHEbxAjXq/adc3Q9piDiyr2PllWR4X8by0GDV1XNAsk12xQGbatamukJrIJnHoCxNUeg1oUGmxVxMn4wq1rZAfq7032MUEu7tceFjBUV1NyV/9m8+b5ufNxvXtn+5PM2oXK38lw4ryMYbgzQ5xemGQDdq3+x37I7YdDA//4WgviEc7JCpiMXcxckADKZQPhM6uSr9X5P3JikpcTjdZfhjSGBhH0HLnebeWoN8tDlz7tJi8ueFJ14tN0HM+kAIvalHGxb9S/dcz3178Ad75PFZcJW2GyyRhtd8/YCZLjNpOg50qdag6HfilBa/G+8NKRrPP4a2jtDA10+3MY9u8of9BMAOirHK/F3lTs= dima@ubuntu-server"

    - name: Install the Docker package | Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install the Docker package | Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Install the Docker package | Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Install the Docker package | Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Install the Docker package | Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install the Docker package | Install Docker Module for Python
      pip:
        name: docker

    - name: Run the docker-compose installation script
      script: ./wsr-skillcloud/docker-compose.sh        

    - name: Create a directory /skillcloud-nginx
      file:
        path: /skillcloud-nginx
        state: directory

    - name: Copying files needed to build images
      copy:
        src: ./wsr-skillcloud/docker-compose.yml
        dest: /skillcloud-nginx

    - name: Create a directory /skillcloud-nginx/{ site, balance}
      file:
        path: /skillcloud-nginx/"{{ item }}"
        state: directory
      loop:
        - site
        - balance

    - name: Copying files needed to build images
      copy:
        src: ./wsr-skillcloud/"{{ item.src }}"
        dest: /skillcloud-nginx/"{{ item.dest }}"
      loop:
         - { src: 'Dockerfile-site', dest: 'site' }
         - { src: 'Dockerfile-balance', dest: 'balance' }
         - { src: 'index.html', dest: 'site'}
         - { src: 'nginx.conf', dest: 'balance' }